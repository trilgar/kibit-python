"""
–ü—Ä–∞–∫—Ç–∏—á–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è: –ö–ª–∞—Å Potion ‚Äî –º–∞–≥—ñ—á–Ω–µ –∑—ñ–ª–ª—è
üí° –ó–∞–≤–¥–∞–Ω–Ω—è:

–°—Ç–≤–æ—Ä—ñ—Ç—å –∫–ª–∞—Å Potion, —è–∫–∏–π –æ–ø–∏—Å—É—î –º–∞–≥—ñ—á–Ω–µ –∑—ñ–ª–ª—è –∑ –ø–µ–≤–Ω–æ—é —Å–∏–ª–æ—é (power), —â–æ –≤–∏—Ä–∞–∂–∞—î—Ç—å—Å—è —Ü—ñ–ª–∏–º —á–∏—Å–ª–æ–º.

–ü–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏:

    + ‚Äî –∑–ª–∏—Ç—Ç—è –¥–≤–æ—Ö –∑—ñ–ª—å: —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–æ–≤–µ –∑—ñ–ª–ª—è –∑ —Å—É–º–∞—Ä–Ω–æ—é —Å–∏–ª–æ—é.

    - ‚Äî –æ—Å–ª–∞–±–ª–µ–Ω–Ω—è: –≤—ñ–¥ —Å–∏–ª–∏ –æ–¥–Ω–æ–≥–æ –∑—ñ–ª–ª—è –≤—ñ–¥–Ω—ñ–º–∞—î—Ç—å—Å—è —Å–∏–ª–∞ —ñ–Ω—à–æ–≥–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –Ω–æ–≤–µ –∑—ñ–ª–ª—è.

    * ‚Äî –ø–æ—Å–∏–ª–µ–Ω–Ω—è: —Å–∏–ª–∞ –∑—ñ–ª–ª—è –º–Ω–æ–∂–∏—Ç—å—Å—è –Ω–∞ —Å–∏–ª—É —ñ–Ω—à–æ–≥–æ.

    str() ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ –Ω–∞ –∫—à—Ç–∞–ª—Ç "–ó—ñ–ª–ª—è —Å–∏–ª–∏: 25"

üîß –£–º–æ–≤–∏:

    –Ø–∫—â–æ –ø—ñ—Å–ª—è –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è —Å–∏–ª–∞ –∑—ñ–ª–ª—è < 0 ‚Äî —Å–∏–ª–∞ –≤–≤–∞–∂–∞—î—Ç—å—Å—è —Ä—ñ–≤–Ω–æ—é 0.

    –£—Å—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å –Ω–æ–≤–∏–π –æ–±‚Äô—î–∫—Ç Potion.

    –î–æ–¥–∞—Ç–∫–æ–≤–æ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á—Ç–µ –º–µ—Ç–æ–¥ __repr__, —â–æ–± –∑—Ä—É—á–Ω–æ –≤–∏–≤–æ–¥–∏—Ç–∏ –æ–±'—î–∫—Ç–∏ —É –∫–æ–Ω—Å–æ–ª—å.
"""

class Potion:
    def __init__(self, power, name):
        self.power = power
        self.name = name

    def __str__(self):
        return f"Strength of the {self.name} potion is {self.power}"

    def __add__(self, other):
        if not isinstance(other, Potion):
            print("Cannot add other type than Potion")
            return self
        print("Adding two potions")
        name  = self.name + " " + other.name
        power = self.power + other.power
        return Potion(power, name)

    def __sub__(self, other):
        if not isinstance(other, Potion):
            print("Cannot substract other type than Potion")
            return self
        print("Substracting two potions")
        name  = self.name + " " + other.name
        power = self.power - other.power
        if power < 0:
            power = 0
        return Potion(power, name)

    def __mul__(self, other):
        if not isinstance(other, Potion):
            print("Cannot multiply other type than Potion")
            return self
        print("Multiplying two potions")
        name = self.name + " " + other.name
        power = self.power * other.power
        return Potion(power, name)


strength_potion = Potion(10, "Strong")

weakness_potion = Potion(0, "Weakness")

small_strength_potion = Potion(3, "small strength")

print(strength_potion * weakness_potion)